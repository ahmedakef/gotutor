package main

import (
	"github.com/ahmedakef/gotutor/dlv"
	"github.com/go-delve/delve/service/debugger"
	"github.com/ahmedakef/gotutor/serialize"
)

func main() {
	client, err := dlv.RunServerAndGetClient("binary", "", dlv.GetBuildFlags(), debugger.ExecutingExistingFile)
	if err != nil {
		logger.Error().Err(err).Msg("runServerAndGetClient")
		return nil
	}
	defer func() {
		err := client.Detach(true)
		if err != nil {
			log.Println("failed to halt the execution")
		}
	}()

	serializer := serialize.NewSerializer(client, logger)
	steps, err := serializer.ExecutionSteps(ctx, _stepsLimit)
	if err != nil {
		return fmt.Errorf("failed to get execution steps: %w", err)
	}
	fmt.Println(steps)

}
-- go.mod --
module play.ground

require (
	github.com/ahmedakef/gotutor v0.0.0-20250111015430-2764702fae93
	github.com/go-delve/delve v1.24.0
)

-- binary --
{{.binary}}
